{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","_ref","robots","cardComponent","map","user","i","StrictMode","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.f843dad5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const {name, email, id} = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return(\r\n        <React.StrictMode>\r\n                <Card \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email}/>\r\n        </React.StrictMode>)\r\n    })\r\n    return (\r\n        <div>\r\n            <React.StrictMode>\r\n                {cardComponent}\r\n            </React.StrictMode>\r\n           \r\n</div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type='search' \r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll', border: 'none', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n        );\r\n};\r\n\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => {\r\n       return response.json();\r\n    })\r\n    .then(users => {\r\n        this.setState({robots: users})\r\n    })\r\n    \r\n}\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return (\r\n                robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()));          \r\n        })\r\n        if (this.state.robots.length === 0) {\r\n            return <h1 className=\"tc\">Loading...</h1>   \r\n        } else {\r\n        return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\"> RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n                <App/>\n  </React.StrictMode> \n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}